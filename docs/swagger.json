{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API для обогащений пользовательских данных",
        "title": "EffectiveMobile API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8083",
    "basePath": "/",
    "paths": {
        "/api/v1/person/create": {
            "post": {
                "description": "Создает нового пользователя с переданными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Создание нового пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя для создания",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePerson"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID нового пользователя",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to create person",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/person/delete/{id}": {
            "delete": {
                "description": "Удаляет пользователя по переданному ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Удаление пользователя по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete person",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/person/get": {
            "get": {
                "description": "Возвращает отфильтрованные данные о людях\nОператоры для фильтрации значений (не распространяется на limit и offset):\n- `var=is:X` — значение равно X\n- `var=isnt:X` — значение не равно X\n- `var=ls:X` — значение меньше X (только для age)\n- `var=mt:X` — значение больше X (только для age)\n- Пример:\n- `age=mt:X` — значение больше X\n- `name=is:X` — значение равно X",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Получение отфильтрованной информации о людях",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя пользователя",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фамилия пользователя",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Отчество пользователя",
                        "name": "patronymic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Пол пользователя",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Национальность пользователя",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Возраст пользователя",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей (если не задан - выводятся все подходящие данные)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение записей",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Person"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get persons",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/person/get/{id}": {
            "get": {
                "description": "Возвращает данные о человеке по его идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Получение информации о человеке по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID человека",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get person",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/person/update": {
            "put": {
                "description": "Обновляет данные пользователя с переданными новыми данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Обновление данных пользователя",
                "parameters": [
                    {
                        "description": "Новые данные пользователя",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PersonUpdate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User successfully updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to update person",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreatePerson": {
            "type": "object",
            "required": [
                "name",
                "surname"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.PersonUpdate": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "models.Person": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}